name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  release:
    types: [published]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    env:
      GROQ_API_KEY: test_key
      SECRET_KEY: test_secret_key
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt
          pip install pytest-asyncio httpx

      - name: Run Tests
        run: |
          cd backend
          python -m pytest tests/test_main.py -v

  build_and_push_backend:
    name: Build and Push Backend Image
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name != 'pull_request'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: hamzaelmokadem
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Create Backend Repository
        run: |
          curl -X POST \
          -H "Content-Type: application/json" \
          -H "Authorization: Bearer ${{ secrets.DOCKER_PASSWORD }}" \
          -d '{"name": "ai-email-agent-backend", "is_private": false}' \
          https://hub.docker.com/v2/repositories/hamzaelmokadem/

      - name: Build and Push Backend Image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: backend/Dockerfile
          push: true
          tags: |
            hamzaelmokadem/ai-email-agent-backend:latest
            hamzaelmokadem/ai-email-agent-backend:${{ github.sha }}
            ${{ github.event_name == 'release' && format('hamzaelmokadem/ai-email-agent-backend:{0}', github.event.release.tag_name) || '' }}

  build_and_push_frontend:
    name: Build and Push Frontend Image
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name != 'pull_request'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: hamzaelmokadem
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Create Frontend Repository
        run: |
          curl -X POST \
          -H "Content-Type: application/json" \
          -H "Authorization: Bearer ${{ secrets.DOCKER_PASSWORD }}" \
          -d '{"name": "ai-email-agent-frontend", "is_private": false}' \
          https://hub.docker.com/v2/repositories/hamzaelmokadem/

      - name: Build and Push Frontend Image
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          file: frontend/Dockerfile
          push: true
          tags: |
            hamzaelmokadem/ai-email-agent-frontend:latest
            hamzaelmokadem/ai-email-agent-frontend:${{ github.sha }}
            ${{ github.event_name == 'release' && format('hamzaelmokadem/ai-email-agent-frontend:{0}', github.event.release.tag_name) || '' }}